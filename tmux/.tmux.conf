# C-bのキーバインドを解除
unbind C-b

set -g prefix M-o
bind-key M-o send-prefix

bind -r M-h select-pane -L
bind -r M-k select-pane -U
bind -r M-j select-pane -D
bind -r M-l select-pane -R

bind -r M-n next-window
bind -r M-p previous-window
bind M-c new-window

set-option -g focus-events on
#フォーカスしているペインの設定
setw -g window-active-style bg=colour232
#フォーカスしていないペインの設定
setw -g window-style bg=colour235
#ペインボーダーの設定
set -g pane-active-border-style fg=colour240,bg=colour240
set -g pane-border-style fg=colour235,bg=colour235

bind M-o display-popup -E -w 80% -h 80% "macism com.apple.keylayout.ABC && t"
bind M-s display-popup -E -w 80% -h 80% "macism com.apple.keylayout.ABC && select_session"
bind M-a display-popup -E -w 10% -h 10% "macism com.apple.keylayout.ABC && mode_ai"
bind M-t display-popup -E -w 10% -h 10% "macism com.apple.keylayout.ABC && mode_test"

# パネルを拡大/縮小（zoom）
bind -r M-z resize-pane -Z

# set-option -g default-terminal "screen-256color"

# エスケープシーケンスのタイムアウトを 0 にする
set -s escape-time 0

# キーバインドのリピート時間を設定する
set-option -g repeat-time 1000

# ステータスバーをトップに配置する
set-option -g status-position top

# ステータスバーの色を設定する
set -g status-fg colour231
set -g status-bg colour234
set -g status-left-length 20
set -g status-left '#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour234,nobold]'
set -g status-right '#(eval tmux-airline `tmux display -p "#{client_width}"`)'
set -g status-right-length 150

set -g window-status-format "#[fg=colour244,bg=colour234]#I #[fg=colour240] #[default]#W "
set -g window-status-current-format "#[fg=colour234,bg=colour31]#[fg=colour117,bg=colour31] #I  #[fg=colour231,bold]#W #[fg=colour31,bg=colour234,nobold]"

set-option -g display-panes-time 1
set-option -g display-time 1
set-option -g status-interval 1

# set-option -g status-left ""
# set-option -g status-right ""

# set-option -g window-status-current-format ""
# set-option -g window-status-format ""

# v でペインを縦分割する
bind v split-window -h
# s でペインを縦分割する
bind s split-window -v

# 番号基準値を変更
# set-option -g base-index 1

# コピーモード開始（行頭にカーソルを移動）
bind -r M-i copy-mode \; send -X start-of-line

# キーボードレイアウトの自動切り替え
set-hook -g after-copy-mode 'run-shell "macism com.apple.keylayout.ABC"'
set-hook -g after-select-pane 'run-shell "macism com.apple.keylayout.ABC"'
set-hook -g after-select-window 'run-shell "macism com.apple.keylayout.ABC"'

# コピーモードでvimキーバインドを使う
set-window-option -g mode-keys vi

unbind -T copy-mode-vi Space
bind -T copy-mode-vi C-c send-keys -X clear-selection
# https://unix.stackexchange.com/questions/348913/copy-selection-to-a-clipboard-in-tmux
bind -T copy-mode-vi y send -X copy-pipe "pbcopy"\; send-keys -X clear-selection
bind -T copy-mode-vi M-c send -X copy-pipe "pbcopy"\; send-keys -X clear-selection
bind -T copy-mode-vi Enter send -X cancel
bind -T copy-mode-vi C-d send -X cursor-down \; send -X cursor-down \; send -X cursor-down \; send -X cursor-down \; send -X cursor-down \; send -X cursor-down \; send -X cursor-down
bind -T copy-mode-vi C-u send -X cursor-up \; send -X cursor-up \; send -X cursor-up \; send -X cursor-up \; send -X cursor-up \; send -X cursor-up \; send -X cursor-up
bind -T copy-mode-vi v send -X clear-selection \; send -X rectangle-off \; send -X begin-selection
bind -T copy-mode-vi V send -X clear-selection \; send -X start-of-line \; send -X begin-selection \; send -X end-of-line \; send -X cursor-left
bind -T copy-mode-vi C-v send -X clear-selection \; send -X begin-selection \; send -X rectangle-toggle
bind -T copy-mode-vi C-a send -X start-of-line
bind -T copy-mode-vi C-e send -X end-of-line \; send -X cursor-left
bind -T copy-mode-vi E send -X end-of-line \; send -X cursor-left
# viw で単語を選択
bind -T copy-mode-vi i switch-client -T copy-mode-vi-inner
bind -T copy-mode-vi-inner w send -X select-word

set-option -g mouse on
set-option -s set-clipboard off
bind -T copy-mode-vi MouseDragEnd1Pane send -X stop-selection

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'schasse/tmux-jump'
set -g @jump-key 'M-f'

run '~/.tmux/plugins/tpm/tpm'
