# C-bのキーバインドを解除
unbind C-b

set -g prefix M-o
bind-key M-o send-prefix

bind M-h select-pane -L
bind M-k select-pane -U
bind M-j select-pane -D
bind M-l select-pane -R

bind M-i run-shell "tmux split-window -h -p 30 -c '#{pane_current_path}'\\; select-pane -L \\; split-window -v -p 30 -c '#{pane_current_path}' \\;"

# パネルの一時非表示/表示
# bind M-s break-pane -dP  # パネルを新しいウィンドウに移動
# bind M-m choose-window 'join-pane -h -l 30% -s "%%"'

# パネルを右側まで広げる
bind M-z run-shell "tmux resize-pane -x $(tmux display-message -p '#{window_width}')"
# パネル幅を30%縮小
bind M-x run-shell "tmux resize-pane -x $(echo \"#{pane_width} * 0.7\" | bc | cut -d. -f1)"

# set-option -g default-terminal "screen-256color"

# エスケープシーケンスのタイムアウトを 0 にする
set -s escape-time 0

# ステータスバーをトップに配置する
set-option -g status-position top

# ステータスバーの色を設定する
set -g status-fg colour231
set -g status-bg colour234
set -g status-left-length 20
set -g status-left '#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour234,nobold]'
set -g status-right '#(eval tmux-airline `tmux display -p "#{client_width}"`)'
set -g status-right-length 150

# set -g window-status-format "#[fg=colour244,bg=colour234]#I #[fg=colour240] #[default]#W "
# set -g window-status-current-format "#[fg=colour234,bg=colour31]#[fg=colour117,bg=colour31] #I  #[fg=colour231,bold]#W #[fg=colour31,bg=colour234,nobold]"

# set-option -g display-panes-time 1
# set-option -g display-time 1
# set-option -g status-interval 1

set-option -g status-left ""
set-option -g status-right ""

set-option -g window-status-current-format ""
set-option -g window-status-format ""

# v でペインを縦分割する
bind v split-window -h
# s でペインを縦分割する
bind s split-window -v

# 番号基準値を変更
# set-option -g base-index 1

# コピーモード開始
bind M-o copy-mode

# コピーモードでvimキーバインドを使う
set-window-option -g mode-keys vi

unbind -T copy-mode-vi Space
bind -T copy-mode-vi C-c send-keys -X clear-selection
# https://unix.stackexchange.com/questions/348913/copy-selection-to-a-clipboard-in-tmux
bind -T copy-mode-vi y send -X copy-pipe "pbcopy"\; send-keys -X clear-selection
bind -T copy-mode-vi Enter send -X cancel
bind -T copy-mode-vi C-d send -X halfpage-down
bind -T copy-mode-vi C-u send -X halfpage-up
bind -T copy-mode-vi v send -X clear-selection \; send -X rectangle-off \; send -X begin-selection
bind -T copy-mode-vi C-v send -X clear-selection \; send -X begin-selection \; send -X rectangle-toggle
bind -T copy-mode-vi C-a send -X start-of-line
bind -T copy-mode-vi C-e send -X end-of-line
# viw で単語を選択
bind -T copy-mode-vi i switch-client -T copy-mode-vi-inner
bind -T copy-mode-vi-inner w send -X previous-word \; send -X begin-selection \; send -X next-word-end

set-option -g mouse on
set-option -s set-clipboard off
bind -T copy-mode-vi MouseDragEnd1Pane send -X stop-selection

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'schasse/tmux-jump'
set -g @jump-key 'f'

run '~/.tmux/plugins/tpm/tpm'
