# commit 時に `-v` オプションを付与
bind status C !git commit -v

# commit hash をクリップボードに保存
bind main  C !@sh -c "printf `git rev-parse %(commit)` | pbcopy"
bind log   C !@sh -c "printf `git rev-parse %(commit)` | pbcopy"
bind blame C !@sh -c "printf `git rev-parse %(commit)` | pbcopy"

# file path をクリップボードに保存
bind tree  C !@sh -c "printf %(file) | pbcopy"
bind diff  C !@sh -c "printf %(file) | pbcopy"
bind stage C !@sh -c "printf %(file) | pbcopy"

# commit を hub で開く
bind main  G !@hub browse -- commit/%(commit)
bind diff  G !@hub browse -- commit/%(commit)
bind log   G !@hub browse -- commit/%(commit)
bind blame G !@hub browse -- commit/%(commit)/%(file)

# rebase する
bind main R !git rebase --committer-date-is-author-date -i %(commit)

# diff を開く
bind main   D !sh -c "git difftool %(commit)~ %(commit)"
bind refs   D !sh -c "git difftool %(branch)"
bind status D !sh -c "git difftool %(file)"
bind diff   D !sh -c "git difftool `git rev-list --parents -n 1 %(commit) | cut -d ' ' -f 2` %(commit) -- %(file)"

# ステージされた変更を選択中のコミットにfixupコミットとして追加
bind main F !sh -c "git commit --fixup=%(commit)"

# 変更をステージして選択中のコミットにfixupコミットとして追加
bind main A !sh -c "git rebase --committer-date-is-author-date --autosquash %(commit)^"

set blame-view = date:default author:abbreviated file-name:auto id:yes,color date:relative line-number:yes,interval=1 text
